using System;
using System.Collections.Generic;
using System.Text;

namespace ENetCore
{
    public enum ENetPeerState
    {
        ENET_PEER_STATE_DISCONNECTED = 0,
        ENET_PEER_STATE_CONNECTING = 1,
        ENET_PEER_STATE_ACKNOWLEDGING_CONNECT = 2,
        ENET_PEER_STATE_CONNECTION_PENDING = 3,
        ENET_PEER_STATE_CONNECTION_SUCCEEDED = 4,
        ENET_PEER_STATE_CONNECTED = 5,
        ENET_PEER_STATE_DISCONNECT_LATER = 6,
        ENET_PEER_STATE_DISCONNECTING = 7,
        ENET_PEER_STATE_ACKNOWLEDGING_DISCONNECT = 8,
        ENET_PEER_STATE_ZOMBIE = 9
    }

    public enum ENetConstant
    {
        ENET_HOST_RECEIVE_BUFFER_SIZE = 256 * 1024,
        ENET_HOST_SEND_BUFFER_SIZE = 256 * 1024,
        ENET_HOST_BANDWIDTH_THROTTLE_INTERVAL = 1000,
        ENET_HOST_DEFAULT_MTU = 1400,
        ENET_HOST_DEFAULT_MAXIMUM_PACKET_SIZE = 32 * 1024 * 1024,
        ENET_HOST_DEFAULT_MAXIMUM_WAITING_DATA = 32 * 1024 * 1024,

        ENET_PEER_DEFAULT_ROUND_TRIP_TIME = 500,
        ENET_PEER_DEFAULT_PACKET_THROTTLE = 32,
        ENET_PEER_PACKET_THROTTLE_SCALE = 32,
        ENET_PEER_PACKET_THROTTLE_COUNTER = 7,
        ENET_PEER_PACKET_THROTTLE_ACCELERATION = 2,
        ENET_PEER_PACKET_THROTTLE_DECELERATION = 2,
        ENET_PEER_PACKET_THROTTLE_INTERVAL = 5000,
        ENET_PEER_PACKET_LOSS_SCALE = (1 << 16),
        ENET_PEER_PACKET_LOSS_INTERVAL = 10000,
        ENET_PEER_WINDOW_SIZE_SCALE = 64 * 1024,
        ENET_PEER_TIMEOUT_LIMIT = 32,
        ENET_PEER_TIMEOUT_MINIMUM = 5000,
        ENET_PEER_TIMEOUT_MAXIMUM = 30000,
        ENET_PEER_PING_INTERVAL = 500,
        ENET_PEER_UNSEQUENCED_WINDOWS = 64,
        ENET_PEER_UNSEQUENCED_WINDOW_SIZE = 1024,
        ENET_PEER_FREE_UNSEQUENCED_WINDOWS = 32,
        ENET_PEER_RELIABLE_WINDOWS = 16,
        ENET_PEER_RELIABLE_WINDOW_SIZE = 0x1000,
        ENET_PEER_FREE_RELIABLE_WINDOWS = 8
    }
}
